[versions]
android-compileSdk = "35"
android-targetSdk = "35"
android-minSdk = "27"
agp = "8.3.1"
kotlin = "2.0.21"
kotlin-immutable-collections = "0.3.8"
coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
kotlinxCoroutinesCore = "1.8.1"
lifecycle-compose = "2.8.7"
activityCompose = "1.9.3"
composeBom = "2025.03.01"
appcompat = "1.7.0"
navigation = "2.8.3"
androidx-graphics-shapes = "1.0.1"
accompanist = "0.32.0"
coil = "3.0.4"
cameraX = "1.4.0"
coin = "4.0.0"
kotlinx-serialization-json = "1.6.2"
room = "2.6.1"
ksp = "2.0.21-1.0.28"
lottie = "6.6.6"
material = "1.12.0"

[libraries]
# Lint
ktlint-composeRules = "com.twitter.compose.rules:ktlint:0.0.26"
# Serialization
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
# Kotlin extensions with android Jetpack and other Android libraries.
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
# Kotlin Immutable collections
kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlin-immutable-collections" }
# Kotlin coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
# Kotlin date time
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version = "0.6.1" }
# Create and render rounded polygonal shapes
androidx-graphics-shapes = { module = "androidx.graphics:graphics-shapes", version.ref = "androidx-graphics-shapes" }
# Backwards-compatible implementations of UI-related Android SDK functionality, including dark mode and Material theming.
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }

##### Lifecycle / ViewModel

# LifecycleScope support
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle-compose" }

# Compose integration with Lifecycle ViewModel
androidx-lifecycle-viewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-compose" }

# ViewModel Scope support
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle-compose" }


##### Navigation
androidx-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation" }


##### Camera
cameraX-core = { group = "androidx.camera", name = "camera-core", version.ref = "cameraX" }
cameraX-camera2 = { group = "androidx.camera", name = "camera-camera2", version.ref = "cameraX" }
cameraX-view = { group = "androidx.camera", name = "camera-view", version.ref = "cameraX" }
cameraX-lifecycle = { group = "androidx.camera", name = "camera-lifecycle", version.ref = "cameraX" }


##### Compose
# Manage all Compose libraries versions and make them work well together.
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
# Compose integration with Activity
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
# Material Design 3
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
# Compose UI primitives.
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
# Tree composition support for code generated by the Compose compiler plugin
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime" }
# Compose support for livedata
androidx-compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
# Higher level abstractions of the Compose UI primitives
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
# Compose graphics
androidx-compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
# Full set of material icons
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }
# Window size utils
androidx-compose-material3-adaptive = { module = "androidx.compose.material3.adaptive:adaptive" }
# Android Studio Preview support
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
# UI Tests Support
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
# Permissions
google-accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanist" }
# Image loading
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network = { group = "io.coil-kt.coil3", name = "coil-network-okhttp", version.ref = "coil" }
# DI
coin-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "coin" }
# Lottie
lottie-compose = { group = "com.airbnb.android", name = "lottie-compose", version.ref = "lottie" }

# Room
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }

##### Testing
# JUnit framework
junit = { group = "junit", name = "junit", version.ref = "junit" }
# Extensive framework for testing
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
# Ui Testing
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


[plugins]
# KSP
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
# Lint
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "11.4.0" }
# Gradle plug-in to build Android applications.
androidApplication = { id = "com.android.application", version.ref = "agp" }
# Library module support
androidLibrary = { id = "com.android.library", version.ref = "agp" }
# Kotlin support
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# Compose plugin
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
# Serialization
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

